--- src/ssen/components/core/Showcase__Invalidation.as
+++ src/ssen/components/core/Showcase__Invalidation.as
@@ -150,6 +150,102 @@
 	}
 }
 
+/*
+# invalidateParentSizeAndDisplayList()
+```
+[trace] Showcase__Invalidation.invalidateParentOnly()
+[trace] Test.invalidateParentSizeAndDisplayList()
+```
+Parent에만 영향을 끼친다.
+리스트가 전반적으로 교체된다거나, 상위의 Rendering에 의해 하위의 Rendering이 실행될 경우 사용할 수 있을듯 싶다.
+
+
+# invalidateProperties()
+```
+[trace] Showcase__Invalidation.invalidatePropertiesOnly()
+[trace] Test.invalidateProperties()
+[trace] @ Test.commitProperties() -->
+[trace] @ Test.commitProperties() <--
+```
+자체적으로는 Size, Display Update 등에는 영향을 미치지 않는다.
+
+# invalidateSize()
+```
+[trace] Showcase__Invalidation.invalidateSizeOnly()
+[trace] Test.invalidateSize()
+[trace] @ Test.measureSizes() -->
+[trace] @ Test.canSkipMeasurement() -->
+[trace] @ Test.canSkipMeasurement() <-- false
+[trace] @ Test.measure() -->
+[trace]     [width basic=0/0/10000 explicit=NaN/NaN/NaN measured=0/0]
+[trace]     [height basic=0/0/10000 explicit=NaN/NaN/NaN measured=0/0]
+[trace] @ Test.measure() <--
+[trace] @ Test.measureSizes() <-- false
+```
+역시 Display Update 에는 영향을 미치지 않는다
+
+# invalidateDisplayList()
+```
+[trace] Showcase__Invalidation.invalidateDisplayListOnly()
+[trace] Test.invalidateDisplayList()
+[trace] @ Test.updateDisplayList() -->
+[trace] @ Test.updateDisplayList() <-- 0 0
+```
+Display Update 에만 영향을 미친다
+Size에 대한 계산을 끌고 오지 않는다
+
+# Intricate invalidation
+```
+[trace] Showcase__Invalidation.invalidateLazy()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateDisplayList()
+[trace] Test.invalidateDisplayList()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateProperties()
+[trace] Test.invalidateParentSizeAndDisplayList()
+[trace] Test.invalidateDisplayList()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateProperties()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateDisplayList()
+[trace] Test.invalidateProperties()
+[trace] Test.invalidateDisplayList()
+[trace] Test.invalidateSize()
+[trace] Test.invalidateProperties()
+[trace] Test.invalidateParentSizeAndDisplayList()
+[trace] Test.invalidateDisplayList()
+[trace] @ Test.commitProperties() -->
+[trace] @ Test.commitProperties() <--
+[trace] @ Test.measureSizes() -->
+[trace] @ Test.canSkipMeasurement() -->
+[trace] @ Test.canSkipMeasurement() <-- false
+[trace] @ Test.measure() -->
+[trace]     [width basic=0/0/10000 explicit=NaN/NaN/NaN measured=0/0]
+[trace]     [height basic=0/0/10000 explicit=NaN/NaN/NaN measured=0/0]
+[trace] @ Test.measure() <--
+[trace] @ Test.measureSizes() <-- false
+[trace] @ Test.updateDisplayList() -->
+[trace] @ Test.updateDisplayList() <-- 0 0
+```
+다수의 Invalidation을 중복 실행한다해도 실행되는 Update Hook 들은 일정하게 작동한다
+
+# 필요한 Hook 구조들
+
+commitProperties()
+- 하위 element 들의 추가/삭제를 할 수 있다 (단순한 element 들의 추가/삭제)
+- content width/height를 계산할 수 있다 (content가 고정 사이즈를 가지는 경우)
+
+canSkipMeasurment()
+- explicit width/height 와 content width/height 를 체크해서 자동 size를 계산할지 결정한다
+
+measure()
+- content width/height 와 explicit width/height 를 가지고 자동 size를 계산한다
+
+
+*/
+
 class Template extends UIComponent {
 	/** @private */
 	override protected function commitProperties():void {
